@using ASBDDS.Shared.Models.Requests
@using ASBDDS.Shared.Models.Responses
@using ASBDDS.Shared.Models.Database.DataDb
@using Newtonsoft.Json
@using ASBDDS.Shared.Helpers
@using System.Text
@inject IHttpService httpClient

<MudDialog DisableSidePadding="true">
    <DialogContent>
        <MudContainer xs="12" Class="mx-auto px-4 justify-center my-4 mud-text-align-center" Style="max-height: 700px; width: 400px; overflow-y: scroll">
            <MudItem xs="12">
                <MudTextField Class="my-2" @bind-Value="@_switchAdminPostRequest.Name" Label="Name" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
            </MudItem>
            <MudSelect Class="my-2" @bind-Value="@_switchAdminPostRequest.Manufacturer" Label="Manufacturer" Variant="Variant.Outlined" Margin="Margin.Dense">
                @{
                    var switchHelper = new SwitchHelper();
                    foreach (var manufacturer in switchHelper.GetManufacturers())
                    {
                        <MudSelectItem Value="@switchHelper.GetManufacturer(manufacturer)"></MudSelectItem>
                    }
                }
            </MudSelect>
            <MudSelect Class="my-2" @bind-Value="@_switchAdminPostRequest.Model" Label="Model" Variant="Variant.Outlined" Margin="Margin.Dense">
                @{
                    if (_switchAdminPostRequest.Manufacturer != "")
                    {
                        var switchHelper = new SwitchHelper();
                        var models = switchHelper.GetModels(_switchAdminPostRequest.Manufacturer);
                        foreach (var model in models)
                        {
                            var modelName = switchHelper.GetModel(model);
                            <MudSelectItem Value="@modelName"></MudSelectItem>
                        }
                    }
                }
            </MudSelect>
            <MudItem xs="12">
                <MudTextField Class="my-2" @bind-Value="@_switchAdminPostRequest.Serial" Label="Serial" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
            </MudItem>
            <MudDivider Class="mt-2 mb-1" />
            <MudItem xs="12">
                <MudTextField Class="my-2" @bind-Value="@_switchAdminPostRequest.Ip" Label="IP" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
            </MudItem>
            <MudSelect Class="my-2" @bind-Value="@_switchAdminPostRequest.AccessProtocol" Label="Auth. Method" Variant="Variant.Outlined" Margin="Margin.Dense">
                <MudSelectItem Value="@SwitchAccessProtocol.SSH"></MudSelectItem>
                <MudSelectItem Value="@SwitchAccessProtocol.Telnet"></MudSelectItem>
            </MudSelect>
            <MudSelect Class="my-2" @bind-Value="@_switchAdminPostRequest.AuthMethod" Label="Auth. Method" Variant="Variant.Outlined" Margin="Margin.Dense">
                <MudSelectItem Value="@SwitchAuthMethod.SSH_USER_PASS">Username and password</MudSelectItem>
            </MudSelect>
            <MudItem xs="12">
                <MudTextField Class="my-2" @bind-Value="@_switchAdminPostRequest.Username" Label="Username" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
            </MudItem>
            <MudItem xs="12">
                <MudTextField Class="my-2" @bind-Value="@_switchAdminPostRequest.Password" Label="Password" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
            </MudItem>
            <MudDivider Class="mt-2 mb-1"> Ports </MudDivider>
            <b>Switch ports</b>
            @foreach (var port in _switchAdminPostRequest.Ports)
            {
                <MudItem xs="12" Class="d-flex flex-row">
                    <MudTextField Class="mr-1" @bind-Value="@port.Number" Label="Port number" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
                    <MudSelect Class="ml-1" @bind-Value="@port.Type" Label="Port type" Variant="Variant.Outlined" Margin="Margin.Dense">
                        <MudSelectItem Value="@SwitchPortType.RJ45"></MudSelectItem>
                        <MudSelectItem Value="@SwitchPortType.RJ45_POE"></MudSelectItem>
                        <MudSelectItem Value="@SwitchPortType.RJ45_POEPLUS"></MudSelectItem>
                    </MudSelect>
                    <MudIconButton Icon="@Icons.Material.Filled.Delete" Color="Color.Error" Size="Size.Small" Class="ma-n1" OnClick="@(() => DeletePort(port))" />
                </MudItem>
            }
            <MudIconButton Class="d-flex flex-row my-n1" Icon="@Icons.Material.Rounded.Add" OnClick="@AddPort" Color="Color.Success" aria-label="add"></MudIconButton>
        </MudContainer>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Create">Ok</MudButton>
    </DialogActions>
</MudDialog>
<SnackBars @ref="_snackBars"></SnackBars>
@code {

    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    private SwitchAdminPostRequest _switchAdminPostRequest;
    private SwitchAdminResponse _switchAdminResponse;
    private SnackBars _snackBars;

    void Cancel() => MudDialog.Cancel();

    protected override async Task OnInitializedAsync()
    {
        _switchAdminPostRequest = new SwitchAdminPostRequest();
        _switchAdminPostRequest.Ports = new List<SwitchPortAdminResponse>();
    }

    private void AddPort()
    {
        _switchAdminPostRequest.Ports.Add(new SwitchPortAdminResponse());
    }

    private void DeletePort(SwitchPortAdminResponse port)
    {
        _switchAdminPostRequest.Ports.Remove(port);
    }

    private async void Create()
    {
        var apiResp = await httpClient.Post<ApiResponse<SwitchAdminPostRequest>>("api/admin/switches", _switchAdminPostRequest);
        if (apiResp == null || apiResp.Status.Code != 0)
        {
            if(apiResp != null)
                _snackBars.ShowError(apiResp.Status.Message);
            else
                _snackBars.ShowError("Unhandled error");
        }
        else
            MudDialog.Close(DialogResult.Ok(true));
    }
}
